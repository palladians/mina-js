export const sampleCredentialSimple = {
	version: "v0",
	witness: {
		type: "simple",
		issuer: {
			_type: "PublicKey",
			value: "B62qqMxueXzenrchT5CKC5eCSmfcbHic9wJd9GEdHVcd9uCWrjPJjHS",
		},
		issuerSignature: {
			_type: "Signature",
			value: {
				r: "27355434072539307953235904941558417174103383443074165997458891331674091021280",
				s: "22156398191479529717864137276005168653180340733374387165875910835098679659803",
			},
		},
	},
	credential: {
		owner: {
			_type: "PublicKey",
			value: "B62qqCMx9YvvjhMFVcRXBqHtAbjWWUhyA9HmgpYCehLHTGKgXsxiZpz",
		},
		data: {
			age: {
				_type: "Field",
				value: "25",
			},
		},
	},
};

export const sampleCredentialUnsigned = {
	version: "v0",
	witness: { type: "unsigned" },
	credential: {
		owner: {
			_type: "PublicKey",
			value: "B62qiVGZQdBJJrxnzhvqp7LKe6jDiFcpU3cF5xHoZof5Pz9qiL85KLx",
		},
		data: {
			age: { _type: "Field", value: "42" },
			name: {
				_type: "Bytes",
				value:
					"416c696365000000000000000000000000000000000000000000000000000000",
			},
		},
	},
};

export const sampleCredentialSimple1 = {
	version: "v0",
	witness: {
		type: "simple",
		issuer: {
			_type: "PublicKey",
			value: "B62qqRryvaLH99vsPx6kL8cuWFq2AZZsDjaQftab4hpGA5Du3Jju6kP",
		},
		issuerSignature: {
			_type: "Signature",
			value: {
				r: "18608032094363426526383612175861105396636219252290095846645842383039012234860",
				s: "16614231870158121751259974049410646935461628042855821394498854808344556066615",
			},
		},
	},
	credential: {
		owner: {
			_type: "PublicKey",
			value: "B62qqBvUfKppzx3omv5g9YSooRuqA3YVG5zq4j33tN2THA6tGc7JUij",
		},
		data: {
			age: { _type: "Field", value: "18" },
			name: {
				_type: "Bytes",
				value:
					"416c696365000000000000000000000000000000000000000000000000000000",
			},
		},
	},
};

export const sampleCredentialSimple2 = {
	version: "v0",
	witness: {
		type: "simple",
		issuer: {
			_type: "PublicKey",
			value: "B62qipmSo9Bju1XPtHfH8ukLWSMgur6e2xiUcfzbqwKEMdzSfQNbfbS",
		},
		issuerSignature: {
			_type: "Signature",
			value: {
				r: "15369596967930537948249866433896467790855310091967164859503093172192059176638",
				s: "18498891580394813079080734274552796309574738769075217343428610783674309728163",
			},
		},
	},
	credential: {
		owner: {
			_type: "PublicKey",
			value: "B62qrVPwPbeogxQKzPcV5dTSTmNo39g1T2hAM19cJ5Dtwk1p4STmKAE",
		},
		data: {
			age: { _type: "Field", value: "18" },
			name: {
				_type: "Bytes",
				value:
					"416c696365000000000000000000000000000000000000000000000000000000",
			},
		},
	},
};

export const sampleCredentialSimple2WithMetadata = {
	version: "v0",
	witness: {
		type: "simple",
		issuer: {
			_type: "PublicKey",
			value: "B62qipmSo9Bju1XPtHfH8ukLWSMgur6e2xiUcfzbqwKEMdzSfQNbfbS",
		},
		issuerSignature: {
			_type: "Signature",
			value: {
				r: "15369596967930537948249866433896467790855310091967164859503093172192059176638",
				s: "18498891580394813079080734274552796309574738769075217343428610783674309728163",
			},
		},
	},
	credential: {
		owner: {
			_type: "PublicKey",
			value: "B62qrVPwPbeogxQKzPcV5dTSTmNo39g1T2hAM19cJ5Dtwk1p4STmKAE",
		},
		data: {
			age: { _type: "Field", value: "18" },
			name: {
				_type: "Bytes",
				value:
					"416c696365000000000000000000000000000000000000000000000000000000",
			},
		},
	},
	metadata: {
		description: "Credential storing age and name",
	},
};

export const sampleCredentialSimple3 = {
	version: "v0",
	witness: {
		type: "simple",
		issuer: {
			_type: "PublicKey",
			value: "B62qrizXhsswtreoKWPNJMj7sGDiHTJgDEuTTM3Bmgetb57r1zhAcfJ",
		},
		issuerSignature: {
			_type: "Signature",
			value: {
				r: "2375499275092969274281993786192209114937573386384308353982489033458104679563",
				s: "15269406577464524067213377409024505430282582322616178910470378547952824825132",
			},
		},
	},
	credential: {
		owner: {
			_type: "PublicKey",
			value: "B62qrVPwPbeogxQKzPcV5dTSTmNo39g1T2hAM19cJ5Dtwk1p4STmKAE",
		},
		data: {
			age: { _type: "Field", value: "20" },
			name: {
				_type: "Bytes",
				value:
					"426f620000000000000000000000000000000000000000000000000000000000",
			},
		},
	},
};

export const sampleCredentialSimpleFromExample = {
	version: "v0",
	witness: {
		type: "simple",
		issuer: {
			_type: "PublicKey",
			value: "B62qnCcWivkcre9fLEWzecUeGNVTcBr3KSWVYEz1iwGyowUJPKD1FMn",
		},
		issuerSignature: {
			_type: "Signature",
			value: {
				r: "45933576571695220977956462912717410478181576785375016603949080470451252394",
				s: "13645517122755792397473376118269828188043766304279817726230650052276347281328",
			},
		},
	},
	credential: {
		owner: {
			_type: "PublicKey",
			value: "B62qkygKmsiqvco3r6F2S6LNaBvH22zSJfyq8i7Kd3NDY64gpUFRfqy",
		},
		data: {
			nationality: "United States of America",
			name: "John Doe",
			birthDate: { _type: "UInt64", value: "633830400000" },
			id: { _type: "Bytes", value: "7fdccf15e37eb8202b92fc85b0f83621" },
			expiresAt: { _type: "UInt64", value: "1848700800000" },
		},
	},
};

export const sampleCredentialSimple3WithMetadata = {
	version: "v0",
	witness: {
		type: "simple",
		issuer: {
			_type: "PublicKey",
			value: "B62qrizXhsswtreoKWPNJMj7sGDiHTJgDEuTTM3Bmgetb57r1zhAcfJ",
		},
		issuerSignature: {
			_type: "Signature",
			value: {
				r: "2375499275092969274281993786192209114937573386384308353982489033458104679563",
				s: "15269406577464524067213377409024505430282582322616178910470378547952824825132",
			},
		},
	},
	credential: {
		owner: {
			_type: "PublicKey",
			value: "B62qrVPwPbeogxQKzPcV5dTSTmNo39g1T2hAM19cJ5Dtwk1p4STmKAE",
		},
		data: {
			age: { _type: "Field", value: "20" },
			name: {
				_type: "Bytes",
				value:
					"426f620000000000000000000000000000000000000000000000000000000000",
			},
		},
	},
	metadata: {
		description: "Credential storing age and name",
	},
};

export const sampleCredentialRecursive = {
	version: "v0",
	witness: {
		type: "recursive",
		vk: {
			data: "AACcenc1yLdGBm4xtUN1dpModROI0zovuy5rz2a94vfdBgG1C75BqviU4vw6JUYqODF8n9ivtfeU5s9PcpEGIP0htil2mfx8v2DB5RuNQ7VxJWkha0TSnJJsOl0FxhjldBbOY3tUZzZxHpPhHOKHz/ZAXRYFIsf2x+7boXC0iPurEX9VcnaJIq+YxxmnSfeYYxHkjxO9lrDBqjXzd5AHMnYyjTPC69B+5In7AOGS6R+A/g3/aR/MKDa4eDVrnsF9Oy/Ay8ahic2sSAZvtn08MdRyk/jm2cLlJbeAAad6Xyz/H9l7JrkbVwDMMPxvHVHs27tNoJCzIlrRzB7pg3ju9aQOu4h3thDr+WSgFQWKvcRPeL7f3TFjIr8WZ2457RgMcTwXwORKbqJCcyKVNOE+FlNwVkOKER+WIpC0OlgGuayPFwQQkbb91jaRlJvahfwkbF2+AJmDnavmNpop9T+/Xak1adXIrsRPeOjC+qIKxIbGimoMOoYzYlevKA80LnJ7HC0IxR+yNLvoSYxDDPNRD+OCCxk5lM2h8IDUiCNWH4FZNJ+doiigKjyZlu/xZ7jHcX7qibu/32KFTX85DPSkQM8dAH/xsAW+J3ruA0YsZeOv/V8EK/7mQHAtNWpPoFWANn0UAv4QC/GO5uqMBwbz0nmfCbCF4BUvws/VU7MwXPmxAyQKR89XcqLS/NP7lwCEej/L8q8R7sKGMCXmgFYluWH4JBSPDgvMxScfjFS33oBNb7po8cLnAORzohXoYTSgztklD0mKn6EegLbkLtwwr9ObsLz3m7fp/3wkNWFRkY5xzSZN1VybbQbmpyQNCpxd/kdDsvlszqlowkyC8HnKbhnvE0Mrz3ZIk4vSs/UGBSXAoESFCFCPcTq11TCOhE5rumMJErv5LusDHJgrBtQUMibLU9A1YbF7SPDAR2QZd0yx3waAC2F3xF+U682SOKF7oCZl2OICysRHqH+rZ604UfdGG0zWRuP2yg6kfGwcGQbO1ql40WrWTiFhbxxdKC7Gbz4y6Ht6YYVSgfzL23FcEeymuPVxpSJSqOvudL03Wm9UijXE3xaEOkSM+laSKP/CeBaAa0j1PSy8KmJi4sxVRkCkJg3tC36fI09hCYjjVTEmMAFTApk/tMUu0tC9Dt/vfDgXAlDJBwN5Y2Pt60qWY92skizVcWyWBxp5A8e4cVu3iToxOGUbSHzawovjubcH7qWjIZoghZJ16QB1c0ryiAfHB48OHhs2p/JZWz8Dp7kfcPkeg2Of2NbupJlNVMLIH4IGWaPAscBRkZ+F4oLqOhJ5as7fAzzU8PQdeZi0YgssGDJVmNEHP61I16KZNcxQqR0EUVwhyMmYmpVjvtfhHi/6I3TgYCmfnm6GL2sN144vMWg/gJ+p9a4GcEA0+gK3oCcKcwkq5rm+1Oxo9LWLp92Bdxq3iqfoIFmJ/ANGSbHF8StVmlVsP8zA+xuHylyiww/Lercce7cq0YA5PtYS3ge9IDYwXckBUXb5ikD3alrrv5mvMu6itB7ix2f8lbiF9Fkmc4Bk2ycIWXJDCuBN+2sTFqzUeoT6xY8XWaOcnDvqOgSm/CCSv38umiOE2jEpsKYxhRc6W70UJkrzd3hr2DiSF1I2B+krpUVK1GeOdCLC5sl7YPzk+pF8183uI9wse6UTlqIiroKqsggzLBy/IjAfxS0BxFy5zywXqp+NogFkoTEJmR5MaqOkPfap+OsD1lGScY6+X4WW/HqCWrmA3ZTqDGngQMTGXLCtl6IS/cQpihS1NRbNqOtKTaCB9COQu0oz6RivBlywuaj3MKUdmbQ2gVDj+SGQItCNaXawyPSBjB9VT+68SoJVySQsYPCuEZCb0V/40n/a7RAbyrnNjP+2HwD7p27Pl1RSzqq35xiPdnycD1UeEPLpx/ON65mYCkn+KLQZmkqPio+vA2KmJngWTx+ol4rVFimGm76VT0xCFDsu2K0YX0yoLNH4u2XfmT9NR8gGfkVRCnnNjlbgHQmEwC75+GmEJ5DjD3d+s6IXTQ60MHvxbTHHlnfmPbgKn2SAI0uVoewKC9GyK6dSaboLw3C48jl0E2kyc+7umhCk3kEeWmt//GSjRNhoq+B+mynXiOtgFs/Am2v1TBjSb+6tcijsf5tFJmeGxlCjJnTdNWBkSHpMoo6OFkkpA6/FBAUHLSM7Yv8oYyd0GtwF5cCwQ6aRTbl9oG/mUn5Q92OnDMQcUjpgEho0Dcp2OqZyyxqQSPrbIIZZQrS2HkxBgjcfcSTuSHo7ONqlRjLUpO5yS95VLGXBLLHuCiIMGT+DW6DoJRtRIS+JieVWBoX0YsWgYInXrVlWUv6gDng5AyVFkUIFwZk7/3mVAgvXO83ArVKA4S747jT60w5bgV4Jy55slDM=",
			hash: {
				_type: "Field",
				value:
					"10004415226961678011613781895787507059143191442658557645176003500242334644061",
			},
		},
		proof: {
			_type: "Proof",
			value: {
				publicInput: [
					"0",
					"26227234720204021054517909417970907532340033574635469836085766982785994507247",
					"0",
					"18",
					"65",
					"108",
					"105",
					"99",
					"101",
					"0",
					"0",
					"0",
					"0",
					"0",
					"0",
					"0",
					"0",
					"0",
					"0",
					"0",
					"0",
					"0",
					"0",
					"0",
					"0",
					"0",
					"0",
					"0",
					"0",
					"0",
					"0",
					"0",
					"0",
					"0",
					"0",
					"0",
				],
				publicOutput: [
					"26227234720204021054517909417970907532340033574635469836085766982785994507247",
					"0",
					"18",
					"65",
					"108",
					"105",
					"99",
					"101",
					"0",
					"0",
					"0",
					"0",
					"0",
					"0",
					"0",
					"0",
					"0",
					"0",
					"0",
					"0",
					"0",
					"0",
					"0",
					"0",
					"0",
					"0",
					"0",
					"0",
					"0",
					"0",
					"0",
					"0",
					"0",
					"0",
					"0",
				],
				maxProofsVerified: 0,
				proof:
					"",
			},
		},
	},
	credential: {
		_type: "Struct",
		properties: {
			owner: { _type: "PublicKey" },
			data: { age: { _type: "Field" }, name: { _type: "Bytes", size: 32 } },
		},
		value: {
			owner: "B62qrVPwPbeogxQKzPcV5dTSTmNo39g1T2hAM19cJ5Dtwk1p4STmKAE",
			data: {
				age: "18",
				name: {
					bytes: [
						{ value: "65" },
						{ value: "108" },
						{ value: "105" },
						{ value: "99" },
						{ value: "101" },
						{ value: "0" },
						{ value: "0" },
						{ value: "0" },
						{ value: "0" },
						{ value: "0" },
						{ value: "0" },
						{ value: "0" },
						{ value: "0" },
						{ value: "0" },
						{ value: "0" },
						{ value: "0" },
						{ value: "0" },
						{ value: "0" },
						{ value: "0" },
						{ value: "0" },
						{ value: "0" },
						{ value: "0" },
						{ value: "0" },
						{ value: "0" },
						{ value: "0" },
						{ value: "0" },
						{ value: "0" },
						{ value: "0" },
						{ value: "0" },
						{ value: "0" },
						{ value: "0" },
						{ value: "0" },
					],
				},
			},
		},
	},
};

export const samplePresentationRequestZkApp = {
	type: "zk-app",
	spec: {
		inputs: {
			data: {
				type: "credential",
				credentialType: "simple",
				witness: {
					type: { type: "Constant", value: "simple" },
					issuer: { _type: "PublicKey" },
					issuerSignature: { _type: "Signature" },
				},
				data: {
					person: {
						age: { _type: "Field" },
						name: { _type: "Bytes", size: 32 },
					},
					points: { _type: "Field" },
				},
			},
			targetAge: { type: "claim", data: { _type: "Field" } },
			targetPoints: { type: "claim", data: { _type: "Field" } },
		},
		logic: {
			assert: {
				type: "and",
				inputs: [
					{
						type: "equals",
						left: {
							type: "property",
							key: "age",
							inner: {
								type: "property",
								key: "person",
								inner: {
									type: "property",
									key: "data",
									inner: {
										type: "property",
										key: "data",
										inner: { type: "root" },
									},
								},
							},
						},
						right: {
							type: "property",
							key: "targetAge",
							inner: { type: "root" },
						},
					},
					{
						type: "equals",
						left: {
							type: "property",
							key: "points",
							inner: {
								type: "property",
								key: "data",
								inner: {
									type: "property",
									key: "data",
									inner: { type: "root" },
								},
							},
						},
						right: {
							type: "property",
							key: "targetPoints",
							inner: { type: "root" },
						},
					},
				],
			},
			outputClaim: {
				type: "property",
				key: "name",
				inner: {
					type: "property",
					key: "person",
					inner: {
						type: "property",
						key: "data",
						inner: { type: "property", key: "data", inner: { type: "root" } },
					},
				},
			},
		},
	},
	claims: {
		targetAge: { _type: "Field", value: "25" },
		targetPoints: { _type: "Field", value: "100" },
	},
	inputContext: {
		type: "zk-app",
		serverNonce: {
			_type: "Field",
			value:
				"13282950667393837968514931367603124110006503770513488711847457500412027340795",
		},
		action: { _type: "Field", value: "123" },
	},
};

export const samplePresentationRequestHttps = {
	type: "https",
	spec: {
		inputs: {
			signedData: {
				type: "credential",
				credentialType: "simple",
				witness: {
					type: { type: "Constant", value: "simple" },
					issuer: { _type: "PublicKey" },
					issuerSignature: { _type: "Signature" },
				},
				data: { age: { _type: "Field" }, name: { _type: "Bytes", size: 32 } },
			},
			targetAge: { type: "claim", data: { _type: "Field" } },
			targetName: {
				type: "constant",
				data: { _type: "Bytes", size: 32 },
				value:
					"416c696365000000000000000000000000000000000000000000000000000000",
			},
		},
		logic: {
			assert: {
				type: "and",
				inputs: [
					{
						type: "equals",
						left: {
							type: "property",
							key: "age",
							inner: {
								type: "property",
								key: "data",
								inner: {
									type: "property",
									key: "signedData",
									inner: { type: "root" },
								},
							},
						},
						right: {
							type: "property",
							key: "targetAge",
							inner: { type: "root" },
						},
					},
					{
						type: "equals",
						left: {
							type: "property",
							key: "name",
							inner: {
								type: "property",
								key: "data",
								inner: {
									type: "property",
									key: "signedData",
									inner: { type: "root" },
								},
							},
						},
						right: {
							type: "property",
							key: "targetName",
							inner: { type: "root" },
						},
					},
				],
			},
			outputClaim: {
				type: "property",
				key: "age",
				inner: {
					type: "property",
					key: "data",
					inner: {
						type: "property",
						key: "signedData",
						inner: { type: "root" },
					},
				},
			},
		},
	},
	claims: { targetAge: { _type: "Field", value: "18" } },
	inputContext: {
		type: "https",
		serverNonce: {
			_type: "Field",
			value:
				"4343919140832211358170758874350867217600871707216240107166052913905177631127",
		},
		action: "POST /api/verify",
	},
};

export const samplePresentationRequestHttpsRecrusiveNoContext = {
	type: "no-context",
	spec: {
		inputs: {
			provedData: {
				type: "credential",
				credentialType: "recursive",
				witness: {
					type: { type: "Constant", value: "recursive" },
					vk: { _type: "VerificationKey" },
					proof: {
						_type: "Proof",
						proof: {
							name: "InputProof",
							publicInput: {
								_type: "Struct",
								properties: {
									context: { _type: "Field" },
									claims: {
										inputOwner: { _type: "PublicKey" },
										data: {
											age: { _type: "Field" },
											name: { _type: "Bytes", size: 32 },
										},
									},
								},
							},
							publicOutput: {
								_type: "Struct",
								properties: {
									owner: { _type: "PublicKey" },
									data: {
										age: { _type: "Field" },
										name: { _type: "Bytes", size: 32 },
									},
								},
							},
							maxProofsVerified: 0,
							featureFlags: {
								rangeCheck0: false,
								rangeCheck1: false,
								foreignFieldAdd: false,
								foreignFieldMul: false,
								xor: false,
								rot: false,
								lookup: false,
								runtimeTables: false,
							},
						},
					},
				},
				data: {
					_type: "Struct",
					properties: {
						age: { _type: "Field" },
						name: { _type: "Bytes", size: 32 },
					},
				},
			},
			targetAge: { type: "claim", data: { _type: "Field" } },
			targetName: {
				type: "constant",
				data: { _type: "Bytes", size: 32 },
				value:
					"416c696365000000000000000000000000000000000000000000000000000000",
			},
		},
		logic: {
			assert: {
				type: "and",
				inputs: [
					{
						type: "equals",
						left: {
							type: "property",
							key: "age",
							inner: {
								type: "property",
								key: "data",
								inner: {
									type: "property",
									key: "provedData",
									inner: { type: "root" },
								},
							},
						},
						right: {
							type: "property",
							key: "targetAge",
							inner: { type: "root" },
						},
					},
					{
						type: "equals",
						left: {
							type: "property",
							key: "name",
							inner: {
								type: "property",
								key: "data",
								inner: {
									type: "property",
									key: "provedData",
									inner: { type: "root" },
								},
							},
						},
						right: {
							type: "property",
							key: "targetName",
							inner: { type: "root" },
						},
					},
				],
			},
			outputClaim: {
				type: "property",
				key: "age",
				inner: {
					type: "property",
					key: "data",
					inner: {
						type: "property",
						key: "provedData",
						inner: { type: "root" },
					},
				},
			},
		},
	},
	claims: { targetAge: { _type: "Field", value: "18" } },
	inputContext: null,
};

export const samplePresentationRequestHttpsFromExample = {
	type: "https",
	spec: {
		inputs: {
			credential: {
				type: "credential",
				credentialType: "simple",
				witness: {
					type: { type: "Constant", value: "simple" },
					issuer: { _type: "PublicKey" },
					issuerSignature: { _type: "Signature" },
				},
				data: {
					_type: "DynamicRecord",
					maxEntries: 20,
					knownShape: {
						nationality: {
							_type: "DynamicString",
							maxLength: 50,
							_isFactory: true,
						},
						expiresAt: { _type: "UInt64" },
						id: { _type: "Bytes", size: 16 },
					},
					_isFactory: true,
				},
			},
			acceptedNations: {
				type: "claim",
				data: {
					_type: "DynamicArray",
					maxLength: 100,
					innerType: { _type: "Field" },
					_isFactory: true,
				},
			},
			acceptedIssuers: {
				type: "claim",
				data: {
					_type: "DynamicArray",
					maxLength: 100,
					innerType: { _type: "Field" },
					_isFactory: true,
				},
			},
			currentDate: { type: "claim", data: { _type: "UInt64" } },
			appId: {
				type: "claim",
				data: { _type: "DynamicString", maxLength: 50, _isFactory: true },
			},
		},
		logic: {
			assert: {
				type: "and",
				inputs: [
					{
						type: "equalsOneOf",
						input: {
							type: "hash",
							inputs: [
								{
									type: "property",
									key: "nationality",
									inner: {
										type: "property",
										key: "data",
										inner: {
											type: "property",
											key: "credential",
											inner: { type: "root" },
										},
									},
								},
							],
							prefix: null,
						},
						options: {
							type: "property",
							key: "acceptedNations",
							inner: { type: "root" },
						},
					},
					{
						type: "equalsOneOf",
						input: { type: "issuer", credentialKey: "credential" },
						options: {
							type: "property",
							key: "acceptedIssuers",
							inner: { type: "root" },
						},
					},
					{
						type: "lessThanEq",
						left: {
							type: "property",
							key: "currentDate",
							inner: { type: "root" },
						},
						right: {
							type: "property",
							key: "expiresAt",
							inner: {
								type: "property",
								key: "data",
								inner: {
									type: "property",
									key: "credential",
									inner: { type: "root" },
								},
							},
						},
					},
				],
			},
			outputClaim: {
				type: "record",
				data: {
					nullifier: {
						type: "hash",
						inputs: [
							{
								type: "property",
								key: "data",
								inner: {
									type: "property",
									key: "credential",
									inner: { type: "root" },
								},
							},
							{ type: "property", key: "appId", inner: { type: "root" } },
						],
						prefix: null,
					},
				},
			},
		},
	},
	claims: {
		acceptedNations: {
			_type: "DynamicArray",
			maxLength: 100,
			innerType: { _type: "Field" },
			value: [
				{
					_type: "Field",
					value:
						"1535750191209038276491867256345743424918048468505871420482779334664484555622",
				},
				{
					_type: "Field",
					value:
						"22047996538609280301110666364818369992447508174403408199422649676981322383447",
				},
				{
					_type: "Field",
					value:
						"24056497251096418057564183210090983888753346776669738257197194846336719337693",
				},
			],
			_isFactory: true,
		},
		acceptedIssuers: {
			_type: "DynamicArray",
			maxLength: 100,
			innerType: { _type: "Field" },
			value: [
				{
					_type: "Field",
					value:
						"12721880551833204308487376247855347855790506166116961306534826352805011774780",
				},
				{
					_type: "Field",
					value:
						"14011147948370197888490875477632505454498830613719602230257743256058116866364",
				},
				{
					_type: "Field",
					value:
						"12498773385156582227269558551700003644817354734729096400197136620414501375034",
				},
			],
			_isFactory: true,
		},
		currentDate: { _type: "UInt64", value: "1732870602397" },
		appId: {
			_type: "DynamicString",
			maxLength: 50,
			value: "my-app-id:123",
			_isFactory: true,
		},
	},
	inputContext: {
		type: "https",
		serverNonce: {
			_type: "Field",
			value:
				"26728896938537336683532437476445371665825629206045543918420915145390235358247",
		},
		action: "my-app-id:123:authenticate",
	},
};
